name: CI/CD Workflow

on:
  push:
    branches: [ main, deployment ]
  pull_request:
    branches: [ main, deployment ]

jobs:
  lint-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest]
#        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']
#        python-version: ['3.10', '3.11']

    runs-on: ${{ matrix.os }}
    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
    - uses: actions/checkout@v4

    - name: Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      continue-on-error: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Run linters
      run: |
        poetry run ruff check --fix

    - name: Install package
      run: |
        poetry install